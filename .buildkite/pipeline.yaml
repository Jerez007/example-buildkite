steps:
  - label: ":golang: Build"
    key: "build_go_app"
    command: "go build -o hello/hello hello/hello.go"
    plugins:
      - artifacts#v1.9.3:
          upload: "hello/hello"
      - docker#v5.9.0:
          image: "golang:1.18.0"

  - block: "Enter Your Name"
    key: "enter_name"
    fields:
      - text: "Your name"
        key: "name"

  - label: ":test_tube: Run Tests"
    key: "run_tests"
    depends_on:
      - build_go_app
    plugins:
      - docker#v5.11.0:
          image: "golang:1.18.0"
    command: |
      go install gotest.tools/gotestsum@latest
      gotestsum --junitfile junit.xml ./...
      buildkite-agent artifact upload junit.xml

  - label: ":buildkite: Upload Test Analytics"
    key: "upload_test_analytics"
    depends_on:
      - run_tests
    command: |
      curl \
        -X POST \
        --fail-with-body \
        -H "Authorization: Token token=\"$BUILDKITE_ANALYTICS_TOKEN\"" \
        -F "data=@junit.xml" \
        -F "format=junit" \
        -F "run_env[CI]=buildkite" \
        -F "run_env[key]=$BUILDKITE_BUILD_ID" \
        -F "run_env[number]=$BUILDKITE_BUILD_NUMBER" \
        -F "run_env[job_id]=$BUILDKITE_JOB_ID" \
        -F "run_env[branch]=$BUILDKITE_BRANCH" \
        -F "run_env[commit_sha]=$BUILDKITE_COMMIT" \
        -F "run_env[message]=$BUILDKITE_MESSAGE" \
        -F "run_env[url]=$BUILDKITE_BUILD_URL" \
        https://analytics-api.buildkite.com/v1/uploads

  - label: "Run Go App"
    key: "run_go_app"
    depends_on:
      - build_go_app
      - enter_name
    plugins:
      - docker#v5.11.0:
          image: "golang:1.18.0"
          mount-buildkite-agent: true
      - artifacts#v1.9.3:
          download: "hello/hello"
    command: |
      chmod +x hello/hello
      hello/hello "$(buildkite-agent meta-data get name)"
